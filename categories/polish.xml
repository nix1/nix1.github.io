<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Coding, Cooking and Random Things (Posts about polish)</title><link>https://nix1.github.io/</link><description></description><atom:link rel="self" type="application/rss+xml" href="https://nix1.github.io/categories/polish.xml"></atom:link><language>en</language><lastBuildDate>Sun, 15 Jan 2017 23:37:11 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>4developers 2012</title><link>https://nix1.github.io/posts/4developers-2012/</link><dc:creator>Paweł Sierszeń</dc:creator><description>&lt;div&gt;&lt;p&gt;Konferencja 4developers odbyła się 18 kwietnia w Poznaniu. Miejsce całkiem w porządku
(&lt;a class="reference external" href="http://concordiadesign.pl/"&gt;Concordia Design&lt;/a&gt;), tyle że jednak do Poznania jest dość daleko…&lt;/p&gt;
&lt;p&gt;Zanim przejdę do konkretów, kilka słów o kwestiach organizacyjnych. Tak jak rok temu, konferencja była
podzielona na 4 sesje między którymi można było się swobodnie przemieszczać. Były to:
&lt;em&gt;Java&lt;/em&gt;, &lt;em&gt;PHP&lt;/em&gt;, &lt;em&gt;Zarządzanie projektami IT&lt;/em&gt; i &lt;em&gt;Wydajność i skalowalność&lt;/em&gt;. Takie rozwiązanie ma niewątpliwie
wiele zalet, jednak często zdarzało się tak że kilka interesujących mnie prezentacji miało miejsce
równocześnie i siłą rzeczy musiałem z niektórych (większości?) zrezygnować. Jednocześnie nikt nie
nagrywał wystąpień – z poprzednich lat tylko nieliczne są dostępne. Dlatego pod tym względem lepiej
wypadła konferencja &lt;a class="reference external" href="http://www.phpcon.pl/2011/"&gt;PHPCon&lt;/a&gt;, która wprawdzie była dłuższa bo trwała 3 dni,
ale dzięki temu można było wziąć udział w każdej prelekcji, a ponadto mają być dostępne w internecie
materiały wideo.&lt;/p&gt;
&lt;p&gt;W porównaniu z poprzednim rokiem, zrezygnowano z paneli dyskusyjnych, za to były warsztaty o nowoczesnych
formularzach zorganizowane przez firmę ePoint. Moim zdaniem kilka równoległych paneli do wyboru było
bardzo dobrym pomysłem, szczególnie że w przeciwieństwie do warsztatów nie kolidowało z wykładami.
Nie wiem co było przyczyną, ale zdecydowanie większy odsetek niż poprzednio stanowili prelegenci
z zagranicy. W szczególności firma &lt;a class="reference external" href="http://www.ibuildings.com/"&gt;Ibuildings&lt;/a&gt;
przysłała bardzo silną reprezentację.&lt;/p&gt;
&lt;div class="section" id="juozas-kaziukenas-jak-wybrac-odpowiednia-baze-nosql"&gt;
&lt;h2&gt;Juozas Kaziukenas: Jak wybrać odpowiednią bazę NoSQL&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://twitter.com/juokaz"&gt;@juokaz&lt;/a&gt;, &lt;a class="reference external" href="http://juokaz.com/"&gt;juokaz.com&lt;/a&gt;
&lt;a class="reference external" href="http://www.data.proidea.org.pl/4developers/4edycja/materialy/prezentacje/JuozasKaziukenas.pdf"&gt;Prezentacja PDF&lt;/a&gt;
Prezentacja Juozasa była wprawdzie o bazach NoSQL, ale zaczął od tego że bazy relacyjne nie są złe,
chociażby w pełni implementują &lt;a class="reference external" href="http://pl.wikipedia.org/wiki/ACID"&gt;ACID&lt;/a&gt;, ale jak mówi
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/CAP_theorem"&gt;CAP theorem&lt;/a&gt;, nie można mieć wszystkiego na raz.
Okazuje się, że rozluźnienie wymagania Consistency w taki sposób, że dane kiedyś w końcu się
zsynchronizują, ale niekoniecznie muszą być przez cały czas spójne, bardzo poprawia skalowalność
w bazach NoSQL. W większości przypadków brak spójności nie jest problemem – na przykład na
Facebooku może zająć kilka minut zanim wszyscy znajomi zobaczą nowy status.&lt;/p&gt;
&lt;p&gt;Dalsza część prezentacji to głównie omówienie i porównanie różnych systemów NoSQL.
Istnieją między nimi istotne różnice, jak chociażby sposób zapisu danych – &lt;em&gt;key-value stores&lt;/em&gt; jak
Dynamo i Redis, &lt;em&gt;document stores&lt;/em&gt; jak MongoDB i CouchDB, grafowe jak Neo4j i FlockDB czy kolumnowe
jak stworzony przez Google BigTable i stworzona przez Facebooka Cassandra. Różnią się też sposobem
replikacji danych.&lt;/p&gt;
&lt;p&gt;Niezależnie od wyboru konkretnej bazy, konkluzja była jedna – systemy rozproszone są zbyt skomplikowane,
żeby udało się ich prawidłowo użyć za pierwszym razem. Pokazuje to przykład Twittera, Foursquare i
wielu innych, a podsumowuje bardzo dobrze jedno zdanie z prezentacji: „You will fail”. 😉&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="mariusz-gil-rozproszone-przetwarzanie-zadan"&gt;
&lt;h2&gt;Mariusz Gil: Rozproszone przetwarzanie zadań&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.data.proidea.org.pl/4developers/4edycja/materialy/prezentacje/MariuszGil.pdf"&gt;Prezentacja PDF&lt;/a&gt;
Wiele zadań, z wysyłką maili na czele, wykonywane jednocześnie w momencie żądania użytkownika
niepotrzebnie opóźnia wygenerowanie odpowiedzi i w związku z tym powinno/musi być obsłużone „w tle”.
Mariusz Gil omówił kilka sposobów rozwiązania tego problemu.&lt;/p&gt;
&lt;p&gt;Prawdopodobnie najpopularniejszym sposobem jest napisanie prostego workera CRON+PHP.
Mariusz porównuje to do pisania frameworka – podobno każdy programista wcześniej czy później
pisze swój 🙂 Oczywiście jest to możliwe, natomiast zrobienie tego prawidłowo, to znaczy z
obsługą sytuacji krytycznych czy odpowiednim do sytuacji wznawianiem błędnych zadań zajmuje
sporo czasu i na pewno lepiej jest skorzystać z gotowych rozwiązań.&lt;/p&gt;
&lt;p&gt;Wymienione gotowe rozwiązania to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;MemcacheQ&lt;/li&gt;
&lt;li&gt;BeanstalkD (+biblioteka Pheanstalk)&lt;/li&gt;
&lt;li&gt;GearmanD – Task Management Framework&lt;/li&gt;
&lt;li&gt;Amazon SQS (w chmurze, $0.01 za 10000 requestów)&lt;/li&gt;
&lt;li&gt;Resque&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Trudno mi po pobieżnym przejrzeniu porównać je do siebie. Osoby korzystające z Memcache’a
na pewno zainteresuje MemcacheQ, a SQS te korzystające z chmur Amazonu. Wydaje się że Gearman
oferuje najwięcej możliwości, a najbardziej przyjazny jest stworzony na potrzeby Githuba Resque
(i przeportowany później na PHP).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="rowan-merewood-szacowanie-albo-jak-wykopac-swoj-wlasny-grob"&gt;
&lt;h2&gt;Rowan Merewood: Szacowanie, albo jak wykopać swój własny grób&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://twitter.com/rowan_m"&gt;@rowan_m&lt;/a&gt;, &lt;a class="reference external" href="http://merewood.org/"&gt;merewoord.org&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.slideshare.net/rowan_m/estimation-or-how-to-dig-your-grave"&gt;prezentacja na Slideshare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Rowan Merewood mówił dość szeroko o szacowaniu ilości czasu, który to problem na ogół dotyka
programistów (Rowan jest programistą PHP). Zachęcam do przejrzenia prezentacji na Slideshare,
dowiedziałem się z niej między innymi:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;że 8-godzinny dzień pracy to najwyżej 6 godzin pracy,&lt;/li&gt;
&lt;li&gt;że bardzo dokładne planowanie zadań wcale nie pomaga w wycenie,&lt;/li&gt;
&lt;li&gt;że ze względu na niepewność wycen podejście iteracyjne jest jedynym sensownym,&lt;/li&gt;
&lt;li&gt;o &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Kano_model"&gt;modelu Kano&lt;/a&gt;, czyli co sprawia że klient jest zadowolony
i jak to się ma do &lt;a class="reference external" href="http://en.wikipedia.org/wiki/MoSCoW_Method"&gt;metody MoSCoW&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;i że czasem lepiej jest powiedzieć, że coś „będzie, kiedy będzie” zamiast podawać wycenę „z sufitu”. 🙂&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="thijs-feryn-tworzenie-i-wdrazanie-z-uzyciem-strategii-chmur-hybrydowych"&gt;
&lt;h2&gt;Thijs Feryn: Tworzenie i wdrażanie z użyciem strategii chmur hybrydowych&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://twitter.com/ThijsFeryn"&gt;@ThijsFeryn&lt;/a&gt;, &lt;a class="reference external" href="http://blog.feryn.eu/"&gt;blog.feryn.eu&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Thijs w swojej prezentacji poruszył wiele aspektów chmur. Wszystkie rozwiązania „as a service” – PaaS
(platform), SaaS (software), IaaS (infrastracture) odnoszą się do różnych poziomów abstrakcji
przetwarzania w chmurach.&lt;/p&gt;
&lt;p&gt;Thijs mówił o Amazon Web Services (AWS) jako IaaS – najpopularniejsze usługi Amazonu to EC2
(Elastic Computing Cloud), S3 (Simple Storage Service), DynamoDB i RDS (Relational Database Service).
AWS sam w sobie nie posiada pojęcia aplikacji – udostępnia tylko infrastrukturę. Windows Azure
udostępnia pełne środowisko uruchomieniowe aplikacji (PaaS). Nieco podobnym rozwiązaniem,
chociaż tylko dla PHP, jest Orchestra. Co ciekawe, Orchestra została zbudowana w oparciu o
usługi Amazonu.&lt;/p&gt;
&lt;p&gt;Mimo wielu zalet, takich jak szybkość, wysoka dostępność i niezawodność, w chmurach występuje
kilka istotnych problemów. Zarządzanie wieloma instancjami aplikacji może być skomplikowane,
deployment na wiele serwerów jest utrudniony. Nawet sama obsługa sesji może wymagać zaawansowanej
replikacji danych. Okazuje się też, że chmury wcale niekoniecznie są tanie, szczególnie AutoScaling
w EC2 jest nieco ryzykowny finansowo 🙂&lt;/p&gt;
&lt;p&gt;Konkluzją prezentacji było to, że ze względu na trudności dostosowywania architektury aplikacji
do chmur, zasadniczo sprawdzają się one najbardziej w nowych projektach. Dobrym pomysłem jest używanie
od początku jednolitego interfejsu, takiego jak Zend CloudStorage, który umożliwia lokalne zapisywanie
danych, a w razie potrzeby może być bardzo łatwo przełączony na AWS albo Azure.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="jacek-wieczorek-alfa-team-czyli-pierwszy-scrum-w-allegro"&gt;
&lt;h2&gt;Jacek Wieczorek: Alfa Team, czyli pierwszy Scrum w Allegro&lt;/h2&gt;
&lt;p&gt;Z prezentacja Jacka Wieczorka można było dowiedzieć się jak wyglądało tworzenie pierwszego,
eksperymentalnego, zespołu scrumowego w tak dużej organizacji jaką jest Allegro.
Liczne przeszkody napotykane przy tym przedsięwzięciu pokazywały jak bardzo odmienna jest
organizacja pracy w metodykach waterfallowych. Jak się okazuje, mimo trudnych czasami do
pokonania kwestii organizacyjnych, największą przeszkodą w stworzeniu zgranego i przede
wszystkim efektywnego zespołu stanowiła zmiana sposobu myślenia jego członków. Wszystkie osoby
wchodzące w skład Alfa Teamu musiały przestawić się z wyspecjalizowanych i zwykle bardzo
odizolowanych ról jakie pełniły wcześniej na otwartą dyskusję w zespole interdyscyplinarnym.
Po raz pierwszy programiści nie otrzymywali gotowych wymagań, ale musieli dogadać się „twarzą w
twarz” z analitykami i ludźmi ze świata biznesu.&lt;/p&gt;
&lt;p&gt;Pomimo wielu przeszkód i tego, że Scrum nie rozwiązał większości problemów, udało się osiągnąć
podstawowy cel i skrócić cykl rozwoju oprogramowania z ok. 2 miesięcy do długości jednego sprintu.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="martin-de-keijzer-tworzenie-aplikacji-moblinych-w-javascript-z-sencha-touch-2"&gt;
&lt;h2&gt;Martin de Keijzer: Tworzenie aplikacji moblinych w Javascript z Sencha Touch 2&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.twitter.com/Martin1982/"&gt;@Martin1982&lt;/a&gt;, &lt;a class="reference external" href="http://martindekeijzer.nl/"&gt;martindekeijzer.nl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.slideshare.net/Martin82/sencha-touch-2-12585840"&gt;Prezentacja na Slideshare&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Prezentacja Martina była bardzo techniczna, także streszczanie jej nie ma sensu – na &lt;a class="reference external" href="http://www.sencha.com/learn/touch/"&gt;stronie
Sencha&lt;/a&gt; jest wystarczająca ilość materiałów.
W każdym razie, utwierdziłem się w przekonaniu, że web development będzie się coraz bardziej
zmieniał pod kątem urządzeń mobilnych. Wydaje się też, że JavaScript (szczególnie w połączeniu
z HTML5) jest potężnym i bardzo uniwesalnym narzędziem. Jednocześnie Sencha bardzo dobrze
współpracuje w PhoneGapem, dzięki czemu można pisać wieloplatformowe (iOS, Android, Windows Phone,
BlackBerry) aplikacje korzystające z funkcji natywnych urządzeń.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ben-longden-rest-i-ograniczenia-hypermediow"&gt;
&lt;h2&gt;Ben Longden: REST i ograniczenia hypermediów&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://twitter.com/blongden"&gt;@blongden&lt;/a&gt;, &lt;a class="reference external" href="http://nocarrier.co.uk/"&gt;nocarrier.co.uk&lt;/a&gt;
Ben Longden mówił o REST i o swoich próbach stworzenia w pełni zgodnego z REST API. Z elementów,
które szczególnie zapamiętałem, było wykorzystanie swoich własnych typów MIME (&lt;em&gt;application/vnd.…&lt;/em&gt;)
do wersjonowania swojego API. Własne typy MIME można też wykorzystać do serwowania przeglądarkom
sensownego i ładnie wyglądającego HTMLa, dzięki czemu API może samo w sobie stanowić funkcjonalną
aplikację internetową.&lt;/p&gt;
&lt;p&gt;Dodatkowo, usługi które są w pełni RESTful powinny wykorzystywać
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/HATEOAS"&gt;HATEOAS&lt;/a&gt; w celu jak najpełniejszego uniezależnienia
klienta i serwera.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="zakonczenie"&gt;
&lt;h2&gt;Zakończenie&lt;/h2&gt;
&lt;p&gt;Bardzo miłym akcentem na koniec konferencji był &lt;a class="reference external" href="http://www.amazon.com/Kindle-Touch-e-Reader-Touch-Screen-Wi-Fi-Special-Offers/dp/B005890G8Y"&gt;Kindle Touch&lt;/a&gt;,
ufundowany przez firmę IT Kontrakt, którego wygrałem w losowaniu – a wziąłem w nim udział w sumie
tylko dlatego że chciałem dostać od nich piłeczkę 😉 W komplecie znalazł się również pendrive 2GB
w kształcie logo IT Kontrakt, piłeczka taka jak wspomniana (czyli już druga – obie trafiły do biura
Polcode 🙂 ), trochę krówek i dropsy miętowe z logiem firmy.
Dodam, że w czasie konferencji, podobnie jak rok temu, było sporo innych nagród i gadżetów do zgarnięcia –
głównie drobnych, jak np. smycze, ale też T-shirty, pokrowce na laptopy, dyski twarde czy aparaty cyfrowe.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>conferences</category><category>polish</category><guid>https://nix1.github.io/posts/4developers-2012/</guid><pubDate>Sat, 05 May 2012 22:41:30 GMT</pubDate></item><item><title>PHPCon 2011</title><link>https://nix1.github.io/posts/phpcon-2011/</link><dc:creator>Paweł Sierszeń</dc:creator><description>&lt;div&gt;&lt;p&gt;PHPCon to ogólnopolska konferencja programistów i entuzjastów języka PHP. W tym roku odbyła się pod koniec października
w Mąchocicach koło Kielc.&lt;/p&gt;
&lt;p&gt;Poniżej krótkie streszczenie kilku (bardzo subiektywnie) najbardziej interesujących prezentacji. Konferencja trwała
trzy dni, więc opisać wszystkich nie sposób – zainteresowanych odsyłam na stronę PHPCon, gdzie można znaleźć
&lt;a class="reference external" href="http://phpcon.pl/2011/materialy"&gt;komplet materiałów&lt;/a&gt;. Wkrótce powinny pojawić się również nagrania wideo.&lt;/p&gt;
&lt;div class="section" id="krzysiek-szlapinski-architektura-allegro-czyli-jak-przestalem-sie-martwic-i-pokochalem-cacheowanie"&gt;
&lt;h2&gt;Krzysiek Szłapiński: Architektura Allegro, czyli jak przestałem się martwić i pokochałem cache’owanie&lt;/h2&gt;
&lt;p&gt;Krzysiek Szłapiński mówił o architekturze Allegro. Allegro jest prawie w całości napisane w PHP. Od 2007 bazy danych
opierają się na technologiach Oracle (wcześniej był MySQL). Od 2009 roku dane są shardowane na wiele serwerów,
w związku z tym nie jest możliwe robienie złączeń po stronie bazy danych (w całym systemie nie ma ani jednego joina).
Jest to w pewnym sensie zaprzeczeniem dobrych praktyk do których dąży się w małych i średnich aplikacjach, ale twierdzą,
że to wszystko działa bardzo dobrze. W sumie na bazę danych i aplikację mają około 200 serwerów. Serwery cachujące to
kolejne 200 sztuk – cache zawiera wszystko, co tylko się da wcześniej wygenerować. Akcje takie jak logowanie
użytkownika, przeglądanie kategorii, aukcji czy komentarzy nie powoduje wykonania ani jednego zapytania do bazy danych.
Dzięki temu bezproblemowo obsługują 6000 żądań na sekundę. Poza tym wszystko co chociaż minimalnie obciąża system jest
kolejkowane, nawet wystawienie komentarza i przeliczenie ilości gwiazdek jest wykonywane w tle (użytkownik może
zauważyć, że nie pojawiają się natychmiast, ale w ciągu kilku minut).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="adam-puza-zwiekszanie-produktywnosci-programisty-php"&gt;
&lt;h2&gt;Adam Puza – Zwiększanie produktywności programisty PHP&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://webdemon.org.pl/zppphp.php"&gt;Materiały na stronie autora&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Adam Puza z &lt;a class="reference external" href="http://efly.pl/"&gt;efly.pl&lt;/a&gt; mówił o zwiększaniu produktywności programistów, czyli możliwie najbardziej
efektywne wykorzystanie możliwości komputera. Uważa, że każdy programista powinien korzystać z wielokrotnego schowka
(Adam pracuje na Windowsie i proponuje &lt;a class="reference external" href="http://bluemars.org/clipx/"&gt;ClipX&lt;/a&gt;, ale na Ubuntu jest np.
&lt;a class="reference external" href="apt:parcellite"&gt;Parcellite&lt;/a&gt;). Każdy powinien też wydrukować sobie listę skrótów klawiszowych swojego IDE i stopniowo
nauczyć się jak największej liczby z nich. Poleca też aplikacje
&lt;a class="reference external" href="http://humanized.com/enso/launcher/"&gt;Humanized Enso Launcher&lt;/a&gt; i &lt;a class="reference external" href="http://www.autohotkey.com/"&gt;AutoHotKey&lt;/a&gt;.
Szczególnie ten ostatni jest interesujący, ponieważ ma bardzo szerokie możliwości dodawania i konfiguracji skrótów
klawiaturowych globalnych lub zależnych od aplikacji. Możliwe jest również pisanie skryptów (np: przejście do
przeglądarki internetowej, odświeżenie strony, powrót do IDE). Obsługuje też „hotstrings” – rozwijane ciągi znaków,
również w zaawansowany sposób np. wykorzystując nazwę aktualnie otwartego pliku do stworzenia definicji klasy. Niestety
nie udało mi się odnaleźć odpowiednika na linuksa. Adam proponuje też inne usprawnienia – gesty myszy, makra,
testowanie przy użyciu Selenium, przy czym te da się zastosować na każdym systemie.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="michal-zajac-przestrzenie-nazw-za-przeciw-i-dlaczego"&gt;
&lt;h2&gt;Michał Zając: Przestrzenie nazw – za, przeciw i dlaczego&lt;/h2&gt;
&lt;p&gt;Michał Zając z Centrum Edukacyjnego Compendium mówił o przestrzeniach nazw w PHP 5.3 – po co są i o głównych ich
cechach. Prezentacja była dość krótka i dość krótko można ją podsumować – o ile przestrzenie nazw są ciekawym
rozwiązaniem, to w PHP 5.3 są zaimplementowane w dość kiepski sposób i na razie nie poleca stosowania, chyba że jest to
wymuszone przez framework (jak np. w ZF 2.0). Przestrzenie nazw w innych językach – C++, Java, Python są zrobione
dużo lepiej.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="stephan-hochdorfer-testing-untestable-code"&gt;
&lt;h2&gt;Stephan Hochdorfer – Testing Untestable Code&lt;/h2&gt;
&lt;p&gt;Stephan Hochdorfer mówił o tym, w jaki sposób należy pisać/przepisywać i testować kod. Porównuje dwa podejścia względem
starego kodu – kompletny refactoring pod kątem testów i testowanie kodu pozostawionego bez zmian. Twierdzi, że drugi
sposób jest często dużo efektywniejszy, ponieważ niezwykle trudno jest przepisywać kod bez testów, a testowanie źle
napisanego kodu, choć skomplikowane, jest możliwe. Proponuje w tym celu kilka przydatnych technik, m.in. nadpisywanie
istniejącej funkcji __autoload(), testowanie zmiennych prywatnych (korzystając np. z Reflection API lub zwykłego
str_replace), zastępowanie wbudowanych funkcji PHP własnymi
(&lt;a class="reference external" href="http://www.php.net/manual/en/function.runkit-method-redefine.php"&gt;Runkit  – method redefine&lt;/a&gt;) czy symulowanie
zewnętrznych zasobów (bazy danych, webservices, serwery poczty, system plików).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="lorna-jane-mitchell-coaching-development-teams-teach-a-man-to-fish"&gt;
&lt;h2&gt;Lorna Jane Mitchell – Coaching Development Teams: Teach a Man to Fish&lt;/h2&gt;
&lt;p&gt;&lt;a class="reference external" href="http://www.lornajane.net/resource/teach-a-man-to-fish"&gt;http://www.lornajane.net/resource/teach-a-man-to-fish&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Jedna z najciekawszych prezentacji i przy okazji najmniej „techniczna” – o poprawianiu umiejętności zespołów programistów.
Oprócz odrobiny teorii na wykładzie, Lorna Mitchell proponuje kilka konkretnych działań:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;zestawienie umiejętności poszczególnych osób&lt;/li&gt;
&lt;li&gt;analiza rozkładu umiejętności – w interesie firmy jest, żeby wiedza na żaden temat nie była skupiona w jednej osobie, zarówno ze względu na istniejące jak i potencjalne projekty&lt;/li&gt;
&lt;li&gt;wyrównywanie „dziur”, może być przez szkolenia, ale można to zrobić wewnętrznie. Jeśli jest np. jedna osoba która zna się dobrze na Symfony, może przygotować prezentację i opowiedzieć innym zainteresowanym o podstawach, co jest znacznie tańsze niż zatrudnianie zewnętrznych firm&lt;/li&gt;
&lt;li&gt;finansowanie pracownikom konferencji – mówiła dlaczego to się opłaca; proponuje też, podobnie do tego wyżej, spotkania po konferencjach, tak żeby osoby które uczestniczyły w jakimś ciekawym wydarzeniu mogły opowiedzieć innym co z tego wyniosły&lt;/li&gt;
&lt;li&gt;Monthly Developer Lunch – comiesięczne spotkania przy jedzeniu, bez kadry zarządzającej, tak żeby programiści mogli porozmawiać o różnych projektach które robią; podejrzewam że da się to połączyć z poprzednimi dwoma punktami&lt;/li&gt;
&lt;li&gt;Link Tuesday – polega na tym, że we wtorki każda osoba która trafiła na coś wyjątkowo interesującego (tyle, że z branży, bez śmiesznych obrazków itp) wysyła link do wszystkich. Bardzo łatwe do wdrożenia.&lt;/li&gt;
&lt;li&gt;Study Days – jeden dzień w miesiącu (w Google jest jeden dzień w tygodniu) na naukę i rozwijanie własnych pomysłów – fajna sprawa, bo przecież osoby które kodują przez 8 godzin w pracy nie mają już zwykle ochoty na kodowanie w domu. Zrealizowane pomysły oczywiście są własnością firmy.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="inne-prezentacje"&gt;
&lt;h2&gt;Inne prezentacje&lt;/h2&gt;
&lt;p&gt;Oczywiście, było więcej prezentacji wartych uwagi. Na przykład, bardzo ciekawa była ta pod tytułem &lt;em&gt;Transakcyjny System
Aktualizacji Aplikacji WWW&lt;/em&gt; – o ile może sama idea atomowych operacji na bazach danych czy plikach nie była bardzo
zaskakująca, bo na co dzień staram się stosować wiele z wspomnianych dobrych praktyk, to autor pokazał kilka sposobów w
pełni automatycznego wykonywania całkowicie odwracalnych fragmentów na które składa się aktualizacja.&lt;/p&gt;
&lt;p&gt;Kolejna dość ciekawa prezentacja była poświęcona oprogramowaniu do monitorowania aplikacji internetowych (głównie
&lt;a class="reference external" href="http://www.zabbix.com/"&gt;Zabbix&lt;/a&gt;). Było to swojego rodzaju case study na podstawie największego w Polsce sklepu z
bielizną – &lt;a class="reference external" href="http://kontri.pl"&gt;kontri.pl&lt;/a&gt;. W prezentacji znalazły się również przykładowe karty produktowe, które wzbudziły wyraźne
poruszenie u uczestników (w zdecydowanej większości płci męskiej); czytelników, którzy dotarli do końca notki, zachęcam
do sprawdzenia dlaczego 😉&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>conferences</category><category>polish</category><guid>https://nix1.github.io/posts/phpcon-2011/</guid><pubDate>Mon, 28 Nov 2011 19:11:31 GMT</pubDate></item></channel></rss>